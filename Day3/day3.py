
input = [
0B001001100101,
0B010100011100,
0B100000110001,
0B001111110101,
0B100010110101,
0B111010100100,
0B011011000110,
0B100000011101,
0B011001100111,
0B000001011110,
0B000010100011,
0B110100111110,
0B001101100101,
0B011011011101,
0B010000011010,
0B011100100100,
0B001111000011,
0B100111000111,
0B100111100011,
0B101100011011,
0B001110101101,
0B110010101000,
0B111110110111,
0B111100100010,
0B001001000000,
0B001111101011,
0B101100110011,
0B011010001111,
0B100010100001,
0B110011001010,
0B101000001100,
0B111010101100,
0B101010101100,
0B110011101000,
0B001110010110,
0B010101001001,
0B000010101100,
0B010101101010,
0B111001101100,
0B010000000000,
0B011011111000,
0B001110110011,
0B101000001011,
0B110101100101,
0B111001010111,
0B110001111111,
0B010010100110,
0B011010011001,
0B011101100000,
0B100110010101,
0B111000101101,
0B110011110000,
0B011001011000,
0B001101000010,
0B001110011111,
0B100010101100,
0B010011100101,
0B000011110000,
0B101100001111,
0B010001011000,
0B001101011101,
0B011110001110,
0B111110101101,
0B010000000011,
0B111000000011,
0B000100010100,
0B111110011001,
0B111001010011,
0B011000100010,
0B100001110000,
0B111111000100,
0B010100101110,
0B010011100110,
0B101100110111,
0B101001101001,
0B000001110111,
0B101100000001,
0B011010111011,
0B110011011111,
0B001001011001,
0B010110101100,
0B001100101100,
0B101001011101,
0B100101000010,
0B010101000010,
0B111101011110,
0B000000100010,
0B111010010010,
0B100001111011,
0B110000010011,
0B000101111001,
0B111101100111,
0B110101011100,
0B000111110101,
0B011110111001,
0B010000101011,
0B001001011000,
0B010110011100,
0B111111111000,
0B110100000101,
0B110101010011,
0B010011110010,
0B100110111100,
0B111000001101,
0B110001001001,
0B111101111100,
0B111111101001,
0B100101001010,
0B010101010100,
0B010010001111,
0B000010110000,
0B011001110110,
0B111101111011,
0B011001011100,
0B110101010101,
0B110111011111,
0B110101111000,
0B110010100110,
0B110000000010,
0B011001100001,
0B011000110010,
0B010110100000,
0B011110000001,
0B100101011010,
0B100111111011,
0B001110000011,
0B100110011011,
0B000100011101,
0B110000110110,
0B000001000010,
0B011111111010,
0B001010100100,
0B011000100100,
0B001100001111,
0B010111100111,
0B010001101101,
0B011001010000,
0B001010101000,
0B001001100011,
0B000011001010,
0B010010010100,
0B100001011000,
0B000011011011,
0B111011110111,
0B100010010000,
0B111001110000,
0B011100010100,
0B000101101011,
0B010000000010,
0B001101110100,
0B111010111111,
0B011000011110,
0B111110000110,
0B011011011011,
0B010001000100,
0B110111010010,
0B001110010100,
0B001001011010,
0B010111100011,
0B110110110101,
0B110101000101,
0B001011100011,
0B001111010110,
0B110111011000,
0B110001011110,
0B011101000001,
0B101111100000,
0B110001101110,
0B010101101100,
0B010010100010,
0B000111101010,
0B010000001010,
0B011001000010,
0B100000010110,
0B111101010010,
0B111011001011,
0B000010100010,
0B011111111001,
0B111001001011,
0B101001111010,
0B110100000001,
0B010010101111,
0B110011111001,
0B110111100110,
0B100111001111,
0B100101101001,
0B011111100100,
0B011111011011,
0B111100101101,
0B110010000111,
0B110110010000,
0B011101111011,
0B001101101000,
0B001001100110,
0B110001101000,
0B111100101110,
0B000101110111,
0B011110101111,
0B000100010010,
0B011010000011,
0B010010100001,
0B111001111110,
0B001111101010,
0B101110100011,
0B100111111001,
0B110110011010,
0B000100001000,
0B111011010010,
0B011001101110,
0B001011011010,
0B101110111100,
0B110011010110,
0B001010100011,
0B111010111110,
0B011100010011,
0B100011010100,
0B110000111010,
0B110001010001,
0B001111101001,
0B010011100111,
0B101010111010,
0B110101001101,
0B000100111000,
0B100101001001,
0B101110111011,
0B001110011000,
0B011000010010,
0B001000010001,
0B000111011101,
0B100000111100,
0B001110000100,
0B011111111100,
0B000100100100,
0B100101001000,
0B100011011110,
0B011110100010,
0B011110111110,
0B010001010110,
0B000101000000,
0B001001100000,
0B010001101100,
0B110010110101,
0B100001000010,
0B100001001001,
0B000111000011,
0B111000100010,
0B000000011101,
0B111111000110,
0B100111100100,
0B111100011101,
0B101011110011,
0B001010110101,
0B100000000110,
0B111100011001,
0B010110010010,
0B000010010010,
0B001011111001,
0B001000011100,
0B011000011000,
0B111111110000,
0B100001110010,
0B011011110010,
0B000110011101,
0B001101001010,
0B011010100111,
0B100000011100,
0B001000111011,
0B011010100110,
0B000001111111,
0B001010010111,
0B011100001010,
0B110110001000,
0B110010101111,
0B111100010111,
0B100001111010,
0B101110010110,
0B000010110011,
0B111001010100,
0B101101110110,
0B111111111100,
0B011101101011,
0B011011110100,
0B111010100011,
0B001101000110,
0B111101111001,
0B110001111000,
0B010110000111,
0B110110100101,
0B111101011100,
0B100001000011,
0B010011101000,
0B000111110000,
0B111011110100,
0B011010111110,
0B101011001000,
0B111100110101,
0B100100001001,
0B100011110100,
0B010101010011,
0B010110011011,
0B100111001101,
0B000111001010,
0B110111011011,
0B100000111011,
0B111011000001,
0B011111100011,
0B110010000010,
0B100110101111,
0B101001111000,
0B111001111010,
0B000111111000,
0B111110100100,
0B111001111011,
0B100010110111,
0B110111001111,
0B100011001001,
0B110011001101,
0B100011101111,
0B011011110000,
0B101100011110,
0B110110111011,
0B011010100000,
0B111000000010,
0B000010010011,
0B110101101001,
0B101011011101,
0B011101100110,
0B111111000010,
0B010110100101,
0B010010011110,
0B010000101111,
0B010110101001,
0B001111010101,
0B111000101110,
0B100000010111,
0B111001000101,
0B111101101100,
0B011000000110,
0B000001110010,
0B110011010001,
0B011110011011,
0B100000010001,
0B000100100001,
0B011110001100,
0B001101011111,
0B100000000001,
0B000010011001,
0B110111000110,
0B100110110111,
0B011000110000,
0B100101000101,
0B100100111110,
0B000101010100,
0B001110100111,
0B111011001010,
0B010111001001,
0B110101001110,
0B111000100111,
0B000101011100,
0B100010111000,
0B000111110111,
0B010110010100,
0B110101100100,
0B111000011111,
0B000101001100,
0B000001011111,
0B011001111101,
0B110001111001,
0B111111110100,
0B010100111111,
0B011001100110,
0B010110101101,
0B011111011001,
0B101000010100,
0B010001100101,
0B101000100101,
0B001001010010,
0B000100011000,
0B000000000111,
0B001110011001,
0B100000001011,
0B011011101001,
0B111001000000,
0B110011100000,
0B011001100011,
0B000010011100,
0B000111000000,
0B000110011111,
0B010100011101,
0B001100010111,
0B100011000001,
0B001011000110,
0B010000011111,
0B011101001100,
0B101111011110,
0B000101001001,
0B110100101100,
0B000100010101,
0B010011001000,
0B010000010100,
0B111111010000,
0B000101000111,
0B000010010110,
0B001010000001,
0B100110110010,
0B010101100010,
0B111110010100,
0B111011111110,
0B010110110101,
0B011111000011,
0B001001001000,
0B101100001101,
0B100010101001,
0B010001101011,
0B000011011101,
0B010110011111,
0B101001001010,
0B100100001111,
0B100110100011,
0B000101001010,
0B100000100101,
0B011000100110,
0B110100000110,
0B000000010101,
0B000011110010,
0B100010010101,
0B001000100111,
0B111010000101,
0B000011000010,
0B000101001110,
0B000100110000,
0B101110010001,
0B101110100100,
0B111111001101,
0B111011101110,
0B010011000100,
0B000001001000,
0B100010111110,
0B111100101001,
0B001011111101,
0B000110000011,
0B100111111100,
0B111000000110,
0B001001011110,
0B111011110000,
0B110110000110,
0B110110011100,
0B010111111010,
0B011011001110,
0B110110001100,
0B000111100010,
0B011001100101,
0B111111000011,
0B011001111000,
0B110111010100,
0B000011111010,
0B011111101001,
0B011001011010,
0B010111101101,
0B001100100110,
0B001110101100,
0B001011011111,
0B000110001010,
0B100100001101,
0B011001101111,
0B010000100110,
0B110110010100,
0B000000110010,
0B011000101101,
0B110101111011,
0B110011111011,
0B010010001000,
0B001101110000,
0B100111100000,
0B111001011100,
0B001000110010,
0B011000011100,
0B001110010111,
0B010111011101,
0B010001110001,
0B111111101110,
0B000010111000,
0B001001000110,
0B101101100010,
0B000010000000,
0B111100100100,
0B101111011010,
0B111110011111,
0B010011110100,
0B010010010001,
0B011100011101,
0B111100000100,
0B011110011000,
0B000101100000,
0B101000111100,
0B101011110001,
0B001010000100,
0B001100101110,
0B010101010101,
0B111101110010,
0B011110100100,
0B001101100000,
0B000000110011,
0B100101100000,
0B101111100011,
0B101010101001,
0B100110110011,
0B000110100010,
0B101010000100,
0B001011010011,
0B010100110101,
0B000011101101,
0B100001001100,
0B111101101110,
0B100111101001,
0B010110111010,
0B011110000110,
0B100101011101,
0B000000001000,
0B000111001011,
0B011001000101,
0B011101001111,
0B111010001011,
0B010011011111,
0B101100001011,
0B001110110001,
0B101110110100,
0B100100011000,
0B000111010111,
0B111011111011,
0B011011100111,
0B110000110010,
0B101110110000,
0B010001111011,
0B010011111100,
0B110100110011,
0B011000111110,
0B000010111010,
0B001110001001,
0B011001100000,
0B100100100110,
0B011111001010,
0B000101000100,
0B101001010010,
0B010011101100,
0B110100101110,
0B010110001001,
0B111000011011,
0B010001110000,
0B011111011000,
0B010011000011,
0B001100001010,
0B100011100010,
0B011011111100,
0B010110101111,
0B000101100001,
0B101101100000,
0B111000110101,
0B110011010100,
0B000111011010,
0B011111010010,
0B111011111000,
0B100101110111,
0B000000111111,
0B011100110010,
0B110110011011,
0B010001011101,
0B100110110000,
0B110111110010,
0B010001111101,
0B100001101001,
0B110000111111,
0B010111110000,
0B100011001000,
0B011000101111,
0B111100100101,
0B010111010010,
0B111100110110,
0B101001100010,
0B110100010000,
0B110010111000,
0B011100010010,
0B000000001001,
0B010100011110,
0B110101010110,
0B111100100001,
0B111000010010,
0B110000010111,
0B001011100000,
0B001001010101,
0B110101101111,
0B001010010101,
0B010000110100,
0B111001011010,
0B000001111100,
0B101101011111,
0B110100111011,
0B100111010000,
0B110001110100,
0B101011000110,
0B101100111110,
0B001010010001,
0B011111101011,
0B010100001001,
0B010110100001,
0B000000110000,
0B110010111111,
0B111010000100,
0B111100001111,
0B100100110000,
0B001000110001,
0B011010001011,
0B110101111010,
0B001110000001,
0B000010100110,
0B010101111010,
0B011110100101,
0B011011100100,
0B000000011111,
0B100010011001,
0B100101000100,
0B110010011011,
0B011000000000,
0B001111111110,
0B001111010011,
0B100000110111,
0B100011011000,
0B110011111110,
0B010001000001,
0B011100011111,
0B101110001000,
0B101110000111,
0B001101100011,
0B111100100000,
0B101001110010,
0B100011110110,
0B100110101101,
0B011101100100,
0B111001011110,
0B110001101101,
0B100101101110,
0B111101001100,
0B100100100001,
0B100000011110,
0B000000000011,
0B010100010111,
0B001010010110,
0B110010110000,
0B100011110101,
0B110110110110,
0B100101101100,
0B000111011011,
0B001001001011,
0B101111010010,
0B011011010111,
0B010001100001,
0B111110101100,
0B010100100010,
0B001101101111,
0B011111100001,
0B100011011111,
0B110011111100,
0B100110001110,
0B101010100000,
0B100111011010,
0B101110101001,
0B101111001011,
0B110111000010,
0B100110001001,
0B000011111101,
0B110100010011,
0B101001000010,
0B101101011100,
0B001110010010,
0B001111000010,
0B110011101110,
0B001010011000,
0B011001000011,
0B110001101111,
0B001011001011,
0B011001111111,
0B000101010101,
0B101101100110,
0B110100101101,
0B011000111000,
0B011110100011,
0B010101110111,
0B110010001000,
0B101110100010,
0B111010001010,
0B011000001010,
0B001010110111,
0B110011111111,
0B011111101010,
0B000101110000,
0B101101000001,
0B111110111001,
0B110010111011,
0B100111101111,
0B101111000100,
0B011101110000,
0B001101010010,
0B110110011101,
0B000110000001,
0B001011111011,
0B011100001111,
0B110010101100,
0B110010010100,
0B110010100000,
0B110110000100,
0B010110011001,
0B100101101101,
0B010010010101,
0B101011111000,
0B100001001000,
0B011100011110,
0B101110010011,
0B110110001010,
0B110010110001,
0B110000000100,
0B011000000011,
0B000011111000,
0B010111000111,
0B000111000100,
0B111101100100,
0B101000101111,
0B001000000110,
0B000100000001,
0B101001100101,
0B001001111110,
0B001000010011,
0B111100001110,
0B001010111011,
0B011110011101,
0B001111101000,
0B000001110100,
0B110101000110,
0B000101000010,
0B001110101010,
0B101101011101,
0B011100101001,
0B011110000000,
0B001001101011,
0B001001011111,
0B011101111101,
0B101111100111,
0B001110110110,
0B011010110001,
0B011111000001,
0B000100101101,
0B001010010011,
0B010010110000,
0B111011101111,
0B110110000111,
0B001011110101,
0B100001101011,
0B110101100000,
0B010011111101,
0B000101110010,
0B100100111010,
0B101101101111,
0B010110111001,
0B110100110110,
0B111111001111,
0B100110010000,
0B100010100000,
0B011001101000,
0B000000111010,
0B010001100000,
0B000011001101,
0B111100011111,
0B100010111011,
0B000010100111,
0B100101000001,
0B011001001010,
0B100101010001,
0B101001001101,
0B010011101001,
0B000001000101,
0B000010011000,
0B111011100001,
0B001100111010,
0B010011011000,
0B000001011101,
0B010100111001,
0B001010110000,
0B011011101000,
0B010010111011,
0B100101100100,
0B010111000011,
0B001001111001,
0B011111011110,
0B011110111011,
0B101010010111,
0B101101111011,
0B001100011101,
0B011011010010,
0B000011000100,
0B010010110010,
0B001111011110,
0B011100011001,
0B011011101111,
0B010110101010,
0B111011010000,
0B111111010110,
0B001100110110,
0B010000110111,
0B000011110100,
0B011011000001,
0B101100101110,
0B100011001110,
0B011000010100,
0B000110001011,
0B011000000001,
0B000000111100,
0B101100110101,
0B111110010011,
0B111110101001,
0B110110101111,
0B101110110101,
0B110101111001,
0B000010001101,
0B111010101000,
0B010010100101,
0B001111101111,
0B100110100110,
0B000001010000,
0B000011110101,
0B110100111000,
0B101010111100,
0B000000010100,
0B010100010101,
0B010001100010,
0B100011010010,
0B011101001001,
0B000010101111,
0B000101000101,
0B001001101100,
0B111111100101,
0B100111111010,
0B110011101011,
0B000011100000,
0B111111011100,
0B010100001010,
0B000011100110,
0B110011111101,
0B001100000000,
0B011010101111,
0B101010101011,
0B111011000111,
0B010100110010,
0B011110110101,
0B010000011001,
0B100011010110,
0B000000001110,
0B000010101101,
0B111110100011,
0B111110010000,
0B101011101010,
0B011011001101,
0B101011111111,
0B100101101011,
0B111001000100,
0B010010000101,
0B011001010101,
0B110001100010,
0B010100001101,
0B111111101101,
0B101101000111,
0B001110110101,
0B001101000101,
0B001000100110,
0B000011011000,
0B101001001001,
0B010001001000,
0B110110111010,
0B111110011100,
0B000111111100,
0B000110101111,
0B000001110001,
0B011101101010,
0B100001001101,
0B010100010011,
0B001001001110,
0B111110110101,
0B001110001011,
0B111010101110,
0B100111000000,
0B110100000010,
0B000010111110,
0B100100000100,
0B111111001000,
0B111010001000,
0B101011100111,
0B001111111100,
0B001001101110,
0B011000001111,
0B001001100001,
0B001110000110,
0B111011011011,
0B001010101111,
0B101110110110,
0B110010000110,
0B001100010100,
0B110100111001,
0B111111110110,
0B100011001011,
0B111111000101,
0B000111010010,
0B010100100110,
0B101010110110,
0B011110110100,
0B110110101100,
0B100100111111,
0B101101110100,
0B010110101110,
0B101001101101,
0B001101010011,
0B001000100101,
0B010111010011,
0B000011110011,
0B010011111111,
0B101000000110,
0B010001111110,
0B100111010010,
0B010100010100,
0B110100001111,
0B001100000001,
0B010010110110,
0B011010011011,
0B101000010001,
0B101100010110,
0B111010011000,
0B001001101111,
0B111101010001,
0B010101111111,
0B000111010110,
0B010111100100,
0B000111101111,
0B110010100001,
0B100101111100,
0B010010010011,
0B100100001000,
0B010110000001,
0B000011000110,
0B101100110100,
0B000001100101,
0B010110101000,
0B101010100010,
0B101001110000,
0B101111000001,
0B110001111110,
0B101011010101,
0B111000010001,
0B010000101101,
0B000101010011,
0B101100011100,
0B010101000000,
0B010001110010,
0B111000001010,
0B101001011100,
0B001101111101,
0B111000101011,
0B100100000000,
0B010001011111,
0B000101000011,
0B111000011000,
0B000000100101,
0B110100001010,
0B011111111101,
0B100001010100,
0B110000011000,
0B011110011100,
0B000000110110,
0B101100100101,
0B000110001110,
0B110101110100,
0B010011111011,
0B101011100110,
0B110110010101,
0B001110011100,
0B110101110000,
0B111001001111,
0B000010101011,
0B010011100001,
0B100101010111,
0B000111100101,
0B000011001110,
0B111001000111,
0B011001100100,
0B001110001101,
0B110101010100,
0B100101100111,
0B011001000000,
0B100000110100,
0B100011101101,
0B100100110101,
0B011000110110,
0B101110011011,
0B110101100001
]

def IsSet(InBitPosition, InValue):
    compare = 1 << InBitPosition
    isSet = (InValue & compare) != 0
    return isSet

def FindMostSetPositionIn(InBitPosition, InValues):
    setCount = 0
    for index, binaryValue in enumerate(InValues):
        setCount += IsSet(InBitPosition, binaryValue)
    
    return setCount


bitLen = 11

def CullInput(InApplyReverse, culledValues):
    currentBitPosition = 0

    while len(culledValues) != 1  :
        setCount = FindMostSetPositionIn(bitLen - currentBitPosition, culledValues)
        bitIsSet = setCount >= len(culledValues) / 2
        if(InApplyReverse):
            bitIsSet = not bitIsSet

        print("Bit @ (from left)" + str(currentBitPosition) + " must be " + str(bitIsSet) + " Count : " + str(setCount) + ">=" + str(len(culledValues) / 2))

        for index in reversed(range(len(culledValues))):
            if bitIsSet != IsSet(bitLen - currentBitPosition, culledValues[index]):
                culledValues.remove(culledValues[index])

        currentBitPosition += 1
        if currentBitPosition > bitLen:
            break

    return culledValues[0]

oxygen = CullInput(0, input.copy())
co2Scrubber = CullInput(1, input.copy())
print("result: " + str(co2Scrubber * oxygen))


#Part 1
# for index, binaryValue in enumerate(input):
#     for binaryIndex in range(len(commonStates)):
#         compare = 1 << binaryIndex
#         isSet = (binaryValue & compare) == 0
        
#         commonStates[binaryIndex] += isSet

# gammaRate = 0
# epsilonRate = 0

# for binaryIndex in range(len(commonStates)):

#     isSet = commonStates[binaryIndex] <= (len(input) / 2)

#     gammaRate ^= (1 << binaryIndex) * isSet
#     epsilonRate ^= (1 << binaryIndex) * (not isSet)